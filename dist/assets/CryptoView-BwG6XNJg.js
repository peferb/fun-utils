import{d as V,c as w,r as l,g as d,f as o,s as x,i as c,q as T,e as h,P as W,t as r,F as B,k as G,b as p,y as N,C as S,_ as E}from"./index-Bh-oM7fR.js";import{a as F,b as I,_ as j}from"./NumberRange-DzpSQW-s.js";const U={class:"page crypto"},q=["disabled"],P={key:0,style:{color:"red"}},$={style:{"margin-top":"0"}},A={style:{"word-wrap":"break-word"}},L=V({__name:"CryptoView",setup(M){const v=w(()=>!!window.Worker),n=l(null),f=w(()=>!!n.value),i=l(1),t=l({tries:0,wallets:[],total:i.value}),s=l("42"),g=w(()=>f.value?"Stop generating":"Generate wallets"),m=l(!1),y=()=>s.value=s.value.replace(/[^0-9a-fA-F]/g,""),b=()=>{f.value?(C(),_()):k()},k=()=>{const u=new Worker(new URL("/fun-utils/assets/eth-wallet-worker-3n-lzYfn.js",import.meta.url),{type:"module"});u.onmessage=e=>{e.data.type==="progress"?t.value=e.data:e.data.type==="done"&&_()},u.postMessage({walletsToCreate:i.value,endsWith:s.value}),n.value=u},_=()=>{n.value.terminate(),n.value=null},C=()=>{m.value=!0,setTimeout(()=>m.value=!1,3e3)};return(u,e)=>(p(),d("div",U,[o(W,null,{icon:h(()=>[o(S)]),default:h(()=>[e[2]||(e[2]=N(" Crypto "))]),_:1,__:[2]}),e[3]||(e[3]=x('<p data-v-e1a979ca> Using ethers → <a href="https://ethers.org/" data-v-e1a979ca>Github</a>, <a href="https://www.npmjs.com/package/ethers" data-v-e1a979ca>NPM</a></p><p data-v-e1a979ca> See this code → <a href="https://github.com/peferb/fun-utils/blob/main/src/views/CryptoView.vue" data-v-e1a979ca>CryptoView.vue</a>, <a href="https://github.com/peferb/fun-utils/blob/main/public/eth-wallet-worker.js" data-v-e1a979ca>eth-wallet-worker.js</a></p><h2 data-v-e1a979ca>About</h2><p data-v-e1a979ca><em data-v-e1a979ca>&quot;Ends with&quot;</em>, if set, will only generate wallets that end with the specified characters. For each more char added, the time to find a wallet that match <em data-v-e1a979ca>increases exponentially</em>. </p><p data-v-e1a979ca> Only hexadecimal characters are allowed in Ethereum addresses. That&#39;s why the input field will <em data-v-e1a979ca>only accept a-f and 0-9 characters</em>. </p><h2 data-v-e1a979ca>Generate Ethereum wallets</h2>',6)),o(F,{"max-columns":"two",style:{"margin-top":"8px"}},{default:h(()=>[o(I,{modelValue:i.value,"onUpdate:modelValue":e[0]||(e[0]=a=>i.value=a),min:1,max:100,label:"Wallets to create",id:"walletsToCreate",style:{}},null,8,["modelValue"]),o(j,{modelValue:s.value,"onUpdate:modelValue":e[1]||(e[1]=a=>s.value=a),onInput:y,label:"Ends with",type:"text",id:"endsWith"},null,8,["modelValue"])]),_:1}),c("button",{onClick:b,disabled:m.value||!v.value},r(g.value),9,q),v.value?T("",!0):(p(),d("p",P," Your browser does not support workers. Generation of wallets will not work. ")),c("p",null,"Tries: "+r(t.value.tries),1),c("p",$,"Found: "+r(t.value.wallets.length)+" of "+r(t.value.total),1),(p(!0),d(B,null,G(t.value.wallets,a=>(p(),d("div",{key:a.address,class:"list-row"},[c("pre",A,r(a),1)]))),128))]))}}),z=E(L,[["__scopeId","data-v-e1a979ca"]]);export{z as default};
